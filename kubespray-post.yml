---

- hosts: '*'
  vars:
  #remote_user: root
  become: true

  tasks:

  - name: Role Facts
    set_fact:
      block_device: '/dev/sdb'
      vg_name: 'VolGroup00'

  #- name: Install Packages
  #  apt:
  #    name: "{{ item }}"
  #  with_items:
  #    - tree
  #  become: true

  # Docker thin pool storage setup  

  - name: Check for LVM Physical Volume "{{ block_device }}"
    shell: pvs | grep "{{ block_device }}"
    register: result
    ignore_errors: true

  - name: Stop Docker Daemon
    service:
      name: docker
      state: stopped
    when: result.rc != 0

#  - name: Configure LVM Thin Pool
#    shell: |
#      echo DEVS="{{ block_device }}" > /etc/sysconfig/docker-storage-setup
#      container-storage-setup
#    become: true
#    when: result.rc != 0

  - name: Create Physical Volume
    shell: pvcreate "{{ block_device }}"
    when: result.rc != 0

  - name: Create Volume Group
    shell: vgcreate {{ vg_name }} {{ block_device }}
    when: result.rc != 0

  - name: Create Volume Group for Thin Pool
    shell: lvcreate --wipesignatures y -n thinpool {{ vg_name }} -l 95%VG
    when: result.rc != 0

  - name: Create Volume Group for Thin Pool Meta
    shell: lvcreate --wipesignatures y -n thinpoolmeta {{ vg_name }} -l 1%VG
    when: result.rc != 0

  - name: Convert Logical Volume
    shell: lvconvert -y --zero n -c 512K --thinpool "{{ vg_name }}"/thinpool --poolmetadata "{{ vg_name }}"/thinpoolmeta
    when: result.rc != 0

  - name: Create LVM Dir
    file:
      path: /etc/lvm/profile
      state: directory
      mode: 0755

  - name: Check on LVM config file
    shell: ls /etc/lvm/profile/docker-thinpool.profile 2>/dev/null
    register: profile_exist
    ignore_errors: true

  - name: Copy LVM config file
    copy:
      src: docker-thinpool.profile
      dest: /etc/lvm/profile/docker-thinpool.profile
      owner: root
      group: root
      mode: 0644
    when: profile_exist.rc != 0

  - name: Create Physical Volume
    shell: lvchange --metadataprofile docker-thinpool "{{ vg_name }}"/thinpool

  - name: Enable Monitoring for Logical Volumes
    shell: lvs -o+seg_monitor

#  - name: Check on Daemon.json
#    shell: ls /etc/docker/daemon.json
#    register: daemon_file_exist 
#    ignore_errors: true
#
#  - name: Copy Daemon File
#    # Only needed for overlay on CentOS
#    copy:
#      src: daemon.json
#      dest: /etc/docker/daemon.json
#      owner: root
#      group: root
#      mode: 0644
#    when: daemon_file_exist.rc != 0

  - name: Edit docker service file
    lineinfile:
      dest: /etc/systemd/system/docker.service
      state: present
      regexp: '^Environment="DOCKER_STORAGE_OPTIONS='
      line: 'Environment="DOCKER_STORAGE_OPTIONS=-s overlay2"'
      insertafter: '^[Service]'
    become: true

  - name: Start Docker Daemon
    service:
      name: docker
      state: started
    when: result.rc != 0

